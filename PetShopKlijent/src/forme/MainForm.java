/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import FormKupac.FormNoviKupac;
import FormKupac.FormPretragaKupca;
import FormPorudzbina.FormPretragaPorudzbine;
import FormProizvod.FormNoviProizvod;
import FormProizvod.FormPretragaProizvoda;
import controller.ClientController;
import domen.Administrator;
import domen.Kategorija;
import domen.Kupac;
import domen.Porudzbina;
import domen.Proizvod;
import domen.StavkaPorudzbine;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import models.TableModelStavke;
import session.Session;

/**
 *
 * @author User
 */
public class MainForm extends javax.swing.JFrame implements Runnable {

    Administrator a;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        this.a = Session.getInstance().getUlogovani();
        lblUlogovani.setText("Ulogovani administrator: " + a);
        setTitle("Glavna forma");
        Thread th = new Thread(this);
        th.start();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        lblUlogovani = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbKategorija = new javax.swing.JComboBox();
        cmbProizvod = new javax.swing.JComboBox();
        txtKolicina = new javax.swing.JTextField();
        txtCena = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbKupac = new javax.swing.JComboBox();
        txtDatumDostave = new javax.swing.JFormattedTextField();
        txtIznosBezPopusta = new javax.swing.JTextField();
        txtPopust = new javax.swing.JTextField();
        txtIznosSaPopustom = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        lblDatumVreme = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        miNoviKupac = new javax.swing.JMenuItem();
        miPretragaKupca = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        miPretragaPorudzbine = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        miNoviProizvod = new javax.swing.JMenuItem();
        miPretragaProizvoda = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        miOdjava = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUlogovani.setText("Ulogovani");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos porudzbine"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Unos stavki porudzbine")));

        jLabel6.setText("Kategorija proizvoda:");

        jLabel7.setText("Proizvod:");

        jLabel8.setText("Kolicina:");

        jLabel9.setText("Cena:");

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKategorija.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKategorijaItemStateChanged(evt);
            }
        });

        cmbProizvod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProizvod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProizvodItemStateChanged(evt);
            }
        });

        txtKolicina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKolicinaKeyReleased(evt);
            }
        });

        btnDodaj.setText("Dodaj stavku");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi stavku");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(cmbKategorija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(83, 83, 83)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbProizvod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtKolicina)
                            .addComponent(txtCena)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setText("Kupac:");

        jLabel2.setText("Datum dostave:");

        jLabel3.setText("Iznos bez popusta:");

        jLabel4.setText("Popust:");

        jLabel5.setText("Iznos sa popustom:");

        cmbKupac.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKupac.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKupacItemStateChanged(evt);
            }
        });

        txtDatumDostave.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));
        txtDatumDostave.setText("10.07.2022");

        btnSacuvaj.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnSacuvaj.setText("Sacuvaj porudzbinu");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtDatumDostave))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(68, 68, 68)
                                .addComponent(cmbKupac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIznosBezPopusta)
                                    .addComponent(txtPopust)
                                    .addComponent(txtIznosSaPopustom))))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbKupac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatumDostave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIznosBezPopusta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPopust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIznosSaPopustom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );

        jMenu6.setText("Kupac");

        miNoviKupac.setText("Novi kupac");
        miNoviKupac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNoviKupacActionPerformed(evt);
            }
        });
        jMenu6.add(miNoviKupac);

        miPretragaKupca.setText("Pretraga kupca");
        miPretragaKupca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaKupcaActionPerformed(evt);
            }
        });
        jMenu6.add(miPretragaKupca);

        jMenuBar1.add(jMenu6);

        jMenu7.setText("Porudzbina");

        miPretragaPorudzbine.setText("Pretraga porudzbine");
        miPretragaPorudzbine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaPorudzbineActionPerformed(evt);
            }
        });
        jMenu7.add(miPretragaPorudzbine);

        jMenuBar1.add(jMenu7);

        jMenu1.setText("Proizvod");

        miNoviProizvod.setText("Novi proizvod");
        miNoviProizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNoviProizvodActionPerformed(evt);
            }
        });
        jMenu1.add(miNoviProizvod);

        miPretragaProizvoda.setText("Pretraga proizvoda");
        miPretragaProizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaProizvodaActionPerformed(evt);
            }
        });
        jMenu1.add(miPretragaProizvoda);

        jMenuBar1.add(jMenu1);

        jMenu8.setText("Odjava");

        miOdjava.setText("Odjavi se sa sistema");
        miOdjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOdjavaActionPerformed(evt);
            }
        });
        jMenu8.add(miOdjava);

        jMenuBar1.add(jMenu8);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUlogovani)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDatumVreme, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUlogovani)
                    .addComponent(lblDatumVreme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miNoviKupacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNoviKupacActionPerformed
        new FormNoviKupac(this, true).setVisible(true);
    }//GEN-LAST:event_miNoviKupacActionPerformed

    private void miPretragaKupcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaKupcaActionPerformed
        new FormPretragaKupca(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaKupcaActionPerformed

    private void miPretragaPorudzbineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaPorudzbineActionPerformed
        new FormPretragaPorudzbine(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaPorudzbineActionPerformed

    private void miOdjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOdjavaActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "se odjavite sa sistema?", "Konfirmacija", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            new LoginForma().setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_miOdjavaActionPerformed

    private void cmbKategorijaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKategorijaItemStateChanged

        if (cmbKategorija.getSelectedItem() != null) {
            Kategorija k = (Kategorija) cmbKategorija.getSelectedItem();
            popuniProizvode(k);
        }


    }//GEN-LAST:event_cmbKategorijaItemStateChanged

    private void cmbKupacItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKupacItemStateChanged

        if (cmbKupac.getSelectedItem() != null && !txtIznosBezPopusta.getText().isEmpty()) {
            Kupac k = (Kupac) cmbKupac.getSelectedItem();
            double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

            if (k.getStatus().equals("GOLD")) {
                txtPopust.setText("20%");
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.8));
            } else if (k.getStatus().equals("SILVER")) {
                txtPopust.setText("10%");
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.9));
            } else if (k.getStatus().equals("BRONZE")) {
                txtPopust.setText("5%");
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.95));
            }

        }

    }//GEN-LAST:event_cmbKupacItemStateChanged

    private void txtKolicinaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKolicinaKeyReleased

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {

            if (txtKolicina.getText().isEmpty()) {
                txtCena.setText("0.00");
                return;
            }

            Proizvod p = (Proizvod) cmbProizvod.getSelectedItem();
            int kolicina = Integer.parseInt(txtKolicina.getText());

            txtCena.setText(String.valueOf(p.getCena() * kolicina));

        } else {

            txtKolicina.setText("");
            txtCena.setText("0.00");

        }

    }//GEN-LAST:event_txtKolicinaKeyReleased

    private void cmbProizvodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProizvodItemStateChanged

        if (cmbProizvod.getSelectedItem() != null) {
            if (txtKolicina.getText().isEmpty()) {
                txtCena.setText("0.00");
                return;
            }

            Proizvod p = (Proizvod) cmbProizvod.getSelectedItem();
            int kolicina = Integer.parseInt(txtKolicina.getText());

            txtCena.setText(String.valueOf(p.getCena() * kolicina));
        }


    }//GEN-LAST:event_cmbProizvodItemStateChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        if (txtKolicina.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti kolicinu!");
            return;
        }

        Proizvod p = (Proizvod) cmbProizvod.getSelectedItem();
        int kolicina = Integer.parseInt(txtKolicina.getText());
        double cena = Double.parseDouble(txtCena.getText());

        StavkaPorudzbine sp = new StavkaPorudzbine(null, -1, kolicina, cena, p);

        TableModelStavke tm = (TableModelStavke) tblStavke.getModel();
        tm.dodajStavku(sp);

        double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

        txtIznosBezPopusta.setText(String.valueOf(iznosBezPopusta + sp.getCenaStavke()));

        iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

        Kupac k = (Kupac) cmbKupac.getSelectedItem();
        if (k.getStatus().equals("GOLD")) {
            txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.8));
        } else if (k.getStatus().equals("SILVER")) {
            txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.9));
        } else if (k.getStatus().equals("BRONZE")) {
            txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.95));
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int row = tblStavke.getSelectedRow();

        if (row >= 0) {
            TableModelStavke tm = (TableModelStavke) tblStavke.getModel();

            StavkaPorudzbine sp = tm.getStavka(row);

            tm.obrisiStavku(row);

            double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

            txtIznosBezPopusta.setText(String.valueOf(iznosBezPopusta - sp.getCenaStavke()));

            iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

            Kupac k = (Kupac) cmbKupac.getSelectedItem();
            if (k.getStatus().equals("GOLD")) {
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.8));
            } else if (k.getStatus().equals("SILVER")) {
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.9));
            } else if (k.getStatus().equals("BRONZE")) {
                txtIznosSaPopustom.setText(String.valueOf(iznosBezPopusta * 0.95));
            }

        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        try {
            if (txtDatumDostave.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Morate uneti datum dostave!");
                return;
            }

            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Kupac k = (Kupac) cmbKupac.getSelectedItem();
            Date datumDostave = sdf.parse(txtDatumDostave.getText());
            double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());
            double iznosSaPopustom = Double.parseDouble(txtIznosSaPopustom.getText());
            double popust = 0;

            if (txtPopust.getText().equals("5%")) {
                popust = 5;
            } else if (txtPopust.getText().equals("10%")) {
                popust = 10;
            } else if (txtPopust.getText().equals("20%")) {
                popust = 20;
            }

            TableModelStavke tm = (TableModelStavke) tblStavke.getModel();

            Porudzbina p = new Porudzbina(null, new Date(), datumDostave,
                    iznosBezPopusta, popust, iznosSaPopustom, k, a, tm.getLista());

            ClientController.getInstance().addPorudzbina(p);
            resetujFormu();
            JOptionPane.showMessageDialog(this, "Uspesno sacuvana porudzbina!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void miNoviProizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNoviProizvodActionPerformed
        new FormNoviProizvod(this, true).setVisible(true);
    }//GEN-LAST:event_miNoviProizvodActionPerformed

    private void miPretragaProizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaProizvodaActionPerformed
        new FormPretragaProizvoda(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaProizvodaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JComboBox cmbKupac;
    private javax.swing.JComboBox cmbProizvod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumVreme;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JMenuItem miNoviKupac;
    private javax.swing.JMenuItem miNoviProizvod;
    private javax.swing.JMenuItem miOdjava;
    private javax.swing.JMenuItem miPretragaKupca;
    private javax.swing.JMenuItem miPretragaPorudzbine;
    private javax.swing.JMenuItem miPretragaProizvoda;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtCena;
    private javax.swing.JFormattedTextField txtDatumDostave;
    private javax.swing.JTextField txtIznosBezPopusta;
    private javax.swing.JTextField txtIznosSaPopustom;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtPopust;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {

        while (true) {
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");
            lblDatumVreme.setText("Datum i vreme: " + sdf.format(new Date()));
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void srediFormu() {

        popuniKupce();
        popuniKategorije();
        txtCena.setEnabled(false);
        txtIznosBezPopusta.setEnabled(false);
        txtIznosSaPopustom.setEnabled(false);
        txtPopust.setEnabled(false);
        txtCena.setText("0.00");
        txtIznosBezPopusta.setText("0.00");
        txtIznosSaPopustom.setText("0.00");
        tblStavke.setModel(new TableModelStavke());

        Kupac k = (Kupac) cmbKupac.getSelectedItem();
        if (k.getStatus().equals("GOLD")) {
            txtPopust.setText("20%");
        } else if (k.getStatus().equals("SILVER")) {
            txtPopust.setText("10%");
        } else if (k.getStatus().equals("BRONZE")) {
            txtPopust.setText("5%");
        }

    }

    private void popuniKupce() {

        try {
            ArrayList<Kupac> kupci = ClientController.getInstance().getAllKupac();

            cmbKupac.removeAllItems();

            for (Kupac kupac : kupci) {
                cmbKupac.addItem(kupac);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void popuniKategorije() {

        try {
            ArrayList<Kategorija> kategorije = ClientController.getInstance().getAllKategorijaProizvoda();

            cmbKategorija.removeAllItems();

            for (Kategorija kategorija : kategorije) {
                cmbKategorija.addItem(kategorija);
            }

            popuniProizvode(kategorije.get(0));

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void popuniProizvode(Kategorija kategorija) {

        try {
            ArrayList<Proizvod> proizvodi = ClientController.getInstance().getAllProizvod(kategorija);

            cmbProizvod.removeAllItems();

            for (Proizvod proizvod : proizvodi) {
                cmbProizvod.addItem(proizvod);

            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void resetujFormu() {

        txtKolicina.setText("");
        txtDatumDostave.setText("");
        txtCena.setText("0.00");
        txtIznosBezPopusta.setText("0.00");
        txtIznosSaPopustom.setText("0.00");
        tblStavke.setModel(new TableModelStavke());

    }

}
